
/******************************************************************************
** DAT038, TDA417  Datastrukturer och algoritmer, LP2 2020
** Lab 1: Sorting, Complexity
*******************************************************************************/

Name of lab group: Grupp 50
Group member A:    Ali Alladin
Group member B:    William Hugo
Group member C:    Elias Johansson


/******************************************************************************
** Task: Figuring out the complexity
**
** 1. What is the complexity of running each of the following algorithms
**    on each of the following inputs?
******************************************************************************/

Insertion.java on:

- random inputs:      n^2
- 95% sorted inputs:  n^2
- sorted inputs:      n / n log n

Quick.java on:

- random inputs:      n / n log n
- 95% sorted inputs:  n / n log n
- sorted inputs:      n^2

Merge.java on:

- random inputs:      n / n log n
- 95% sorted inputs:  n / n log n
- sorted inputs:      n / n log n

Arrays.sort on:

- random inputs:      n / n log n
- 95% sorted inputs:  n / n log n
- sorted inputs:      n / n log n


/******************************************************************************
** Task: Improving quicksort
**
** 2. Do the following changes affect the complexity of quicksort
**    on any kind of input data? If so, what is it that changes?
******************************************************************************/

Shuffling the array first:
[no] [yes+reason]


Median-of-three pivot selection:
[no] [yes+reason]


Insertion sort for small arrays:
[no] [yes+reason]


/******************************************************************************
** 3. What is a good cutoff to use for insertion sort?
**    Explain briefly how you came to this answer.
**    Remember that you should try to find the answer in a systematic way.
******************************************************************************/

[...]


/******************************************************************************
** 4. Which combination of improvements gives the best performance?
******************************************************************************/

[...]



/******************************************************************************
** Appendix: General information
**
** A. Approximately how many hours did you spend on the assignment?
******************************************************************************/

[..group member..]:  [..hours..]
[..group member..]:  [..hours..]
[..group member..]:  [..hours..]


/******************************************************************************
** B. Are there any known bugs / limitations?
******************************************************************************/

[...]


/******************************************************************************
** C. Did you collaborate with any other students on this lab?
**    If so, please write in what way you collaborated and with whom.
**    Also include any resources (including the web) that you may
**    may have used in creating your design.
******************************************************************************/

[...]


/******************************************************************************
** D. Describe any serious problems you encountered.                    
******************************************************************************/

[...]


/******************************************************************************
** E. List any other comments here.
**    Feel free to provide any feedback on how much you learned 
**    from doing the assignment, and whether you enjoyed it.                                             
******************************************************************************/

[...]

