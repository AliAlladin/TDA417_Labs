Copyleft, distinguished from copyright, is the practice of offering people the right to freely distribute copies and modified versions of a work with the stipulation that the same rights be preserved in derivative works created later. Copyleft software licenses are considered protective or reciprocal, as contrasted with permissive free-software licenses.Copyleft is a form of licensing, and can be used to maintain copyright conditions for works ranging from computer software, to documents, to art, to scientific discoveries and instruments in medicine. In general, copyright law is used by an author to prohibit recipients from reproducing, adapting, or distributing copies of their work. In contrast, under copyleft, an author must give every person who receives a copy of the work permission to reproduce, adapt, or distribute it, with the accompanying requirement that any resulting copies or adaptations are also bound by the same licensing terms.
Copyleft licenses for software require that information necessary for reproducing and modifying the work must be made available to recipients of the binaries. The source code files will usually contain a copy of the license terms and acknowledge the authors.
Copyleft type licenses are a novel use of existing copyright law to ensure a work remains freely available. The GNU General Public License (GPL), originally written by Richard Stallman, was the first software copyleft license to see extensive use, and continues to dominate in that area. Creative Commons, a non-profit organization founded by Lawrence Lessig, provides a similar license-provision condition called share-alike.


Copyleft is a copyright licensing scheme in which an author surrenders some, but not all, rights under copyright law. Instead of allowing a work to fall completely into the public domain (where no ownership of copyright is claimed), copyleft allows an author to impose some restrictions on those who want to engage in activities that would more usually be reserved by the copyright holder. Under copyleft, derived works may be produced provided they are released under the compatible copyleft scheme.
The underlying principle is that one benefits freely from the work of others, but any modifications one makes public must be released under similar terms. For this reason some copyleft licenses are also known as reciprocal licenses, they have also been described as "viral" due to their self-perpetuating terms.
Under fair use, however, the copyleft license may be superseded, just like regular copyrights. Therefore, any person utilizing a copyleft-licensed source for their own work is free to choose any other license provided they meet the fair use standard.According to Free Software Foundation compliance engineer David Turner, the term viral license creates a misunderstanding and a fear of using copylefted free software. David McGowan has written that there is no reason to believe the GPL could force proprietary software to become free software, but could "try to enjoin the firm from distributing commercially a program that combined with the GPL'd code to form a derivative work, and to recover damages for infringement." If the firm "actually copied code from a GPL'd program, such a  suit would be a perfectly ordinary assertion of copyright, which most private firms would defend if the shoe were on the other foot."
Richard Stallman has described this view with an analogy, saying, "The GPL's domain does not spread by proximity or contact, only by deliberate inclusion of GPL-covered code in your program. It spreads like a spider plant, not like a virus."While copyright law gives software authors control over copying, distribution and modification of their works, the goal of copyleft is to give all users of the software the freedom to carry out these activities. In this way, copyleft licenses are distinct from other types of free-software licenses, which do not guarantee that all subsequent recipients of the program receive these rights, or the source code needed to make them effective. In particular, permissive free-software licenses such as BSD allow re-distributors to remove some or all these rights, and do not require the distribution of source code.
Reuses of open source software which subvert the freedom of the software by adding extra restrictions are called open source hijacking. Other forms of open source licensing are susceptible to hijacking, so creators who desire that their work remain free may choose to use copyleft. The Open Directory Project (ODP, also known as DMOZ), which is created and maintained entirely by volunteer editors, can be considered an example of open-source hijacking. Since all of the top search engines use DMOZ, it is an extremely important public commodity which is entirely built by volunteer contributions. Despite this, the DMOZ has remained a commercial product for its entire existence.The economic incentives to work on copyleft content can vary. Traditional copyright law is designed to promote progress by providing economic benefits to creators. When choosing to copyleft their work, content creators may seek complementary benefits like recognition from their peers. The open-source culture had been described as a gift culture, where social status is determined by an individual's contributions. Working on free software may also be an outlet for programmers to fill a need they have noticed. For some creators, keeping their work open is an incentive in and of itself. For these programmers, preventing commercial enterprises from absorbing and selling their product is another incentive.
Copyleft software has economic effects beyond the individual creators. The presence of quality copyleft software can force commercial producers to increase the quality of their products, which must compete with free software. This may also have the effect of preventing large commercial entities from applying monopoly prices. However, competition with proprietary software can also be a reason to forego copyleft. The Free Software Foundation recommends that when "widespread use of the code is vital for advancing the cause of free software,"  allowing the code to be copied and used freely is more important than a copyleft.


An early use of the word "copyleft" was in Li-Chen Wang's Palo Alto Tiny BASIC's distribution notice "@COPYLEFT ALL WRONGS RESERVED" in June 1976, but Tiny BASIC was not distributed under any form of copyleft distribution terms, so the wordplay is the only similarity.The concept of copyleft was described in Richard Stallman's GNU Manifesto in 1985, where he wrote:

GNU is not in the public domain. Everyone will be permitted to modify and redistribute GNU, but no distributor will be allowed to restrict its further redistribution. That is to say, proprietary modifications will not be allowed. I want to make sure that all versions of GNU remain free.

Stallman worked a few years earlier on a Lisp interpreter. Symbolics asked to use the Lisp interpreter, and Stallman agreed to supply them with a public domain version of his work. Symbolics extended and improved the Lisp interpreter, but when Stallman wanted access to the improvements that Symbolics had made to his interpreter, Symbolics refused. Stallman then, in 1984, proceeded to work towards eradicating this emerging behavior and culture of proprietary software, which he named software hoarding. This was not the first time Stallman had dealt with proprietary software, but he deemed this interaction a "turning point". He justified software sharing, protesting that when sharing, the software online can be copied without the loss of the original piece of work. Everyone is a winner. The software can be used multiple times without ever being damaged or wearing out.As Stallman deemed it impractical in the short term to eliminate current copyright law and the wrongs he perceived it perpetuated, he decided to work within the framework of existing law; in 1985, he created his own copyright license, the Emacs General Public License, the first copyleft license. This later evolved into the GNU General Public License, which is now one of the most popular free-software licenses. For the first time a copyright holder had taken steps to ensure that the maximal number of rights be perpetually transferred to a program's users, no matter what subsequent revisions anyone made to the original program. This original GPL did not grant rights to the public at large, only those who had already received the program; but it was the best that could be done under existing law.
The new license was not at this time given the copyleft label. Richard Stallman stated that the use of "Copyleft" comes from Don Hopkins, who mailed him a letter in 1984 or 1985, on which was written: "Copyleft – all rights reversed." The term "kopyleft" with the notation "All Rites Reversed" was also in use in the early 1970s, within the Principia Discordia, which may have inspired Hopkins or influenced other usage. And in the arts Ray Johnson had earlier coined the term independently as it pertained to his making of and distribution of his mixed media imagery in his mail art and ephemeral gifts, for which he encouraged the making of derivative works. (While the phrase appears briefly as (or on) one of his pieces in the 2002 documentary How to Draw a Bunny, Johnson himself is not referenced in the 2001 documentary Revolution OS.)
Some have suggested that copyleft became a divisive issue in the ideological strife between the Open Source Initiative and the free-software movement. However, there is evidence that copyleft is both accepted and proposed by both parties:

Both the OSI and the FSF have copyleft and non-copyleft licenses in their respective lists of accepted licenses.
The OSI's original Legal Counsel Lawrence Rosen has written a copyleft license, the Open Software License.
The OSI's licensing how-to recognises the GPL as a "best practice" license.
Some of the software programs of the GNU Project are published under non-copyleft licenses.
Stallman himself has endorsed the use of non-copyleft licenses in certain circumstances, most recently in the case of the Ogg Vorbis license change.


Common practice for using copyleft is to codify the copying terms for a work with a license. Any such license typically gives each person possessing a copy of the work the same freedoms as the author, including (from the Free Software Definition):

Freedom 0
the freedom to use the work
Freedom 1
the freedom to study the work
Freedom 2
the freedom to copy and share the work with others
Freedom 3
the freedom to modify the work, and the freedom to distribute modified and therefore derivative worksThe list begins with 0 because the freedom to use the work was an afterthought, but deemed most important. It is a common misconception that it is a reference to zero-based numbering from computer programming.
These freedoms do not ensure that a derivative work will be distributed under the same liberal terms. In order for the work to be truly copyleft, the license has to ensure that the author of a derived work can only distribute such works under the same or equivalent license.
In addition to restrictions on copying, copyleft licenses address other possible impediments. These include ensuring the rights cannot be later revoked and requiring the work and its derivatives to be provided in a form that facilitates modification. In software, this requires that the source code of the derived work be made available together with the software itself.
Copyleft licenses necessarily make creative use of relevant rules and laws. For example, when using copyright law, those who contribute to a work under copyleft usually must gain, defer or assign copyright holder status. By submitting the copyright of their contributions under a copyleft license, they deliberately give up some of the rights that normally follow from copyright, including the right to be the unique distributor of copies of the work.
Some laws used for copyleft licenses vary from one country to another, and may also be granted in terms that vary from country to country. For example, in some countries it is acceptable to sell a software product without warranty, in standard GNU GPL style (see articles 11 and 12 of the GNU GPL version 2), while in most European countries it is not permitted for a software distributor to waive all warranties regarding a sold product. For this reason the extent of such warranties are specified in most European copyleft licenses. Regarding that, see the European Union Public Licence EUPL, or the CeCILL license, a license that allows one to use GNU GPL (see article 5 of the EUPL and article 5.3.4 of CeCILL) in combination with a limited warranty (see article 7 and 8 of the EUPL and 9 of CeCILL). For projects which will be run over a network, a variation of the GPL is provided in the Affero General Public License, which ensures that the source code is available to users of network software.



Copyleft is a distinguishing feature of some free software licenses. Many free-software licenses are not copyleft licenses because they do not require the licensee to distribute derivative works under the same license. There is an ongoing debate as to which class of license provides the greater degree of freedom. This debate hinges on complex issues such as the definition of freedom and whose freedoms are more important, or whether to maximize the freedom of all potential future recipients of a work (freedom from the creation of proprietary software). Non-copyleft free-software licenses maximize the freedom of the initial recipient (freedom to create proprietary software).
In common with the Creative Commons share-alike licensing system, GNU's Free Documentation License allows authors to apply limitations to certain sections of their work, exempting some parts of their creation from the full copyleft mechanism. In the case of the GFDL, these limitations include the use of invariant sections, which may not be altered by future editors. The initial intention of the GFDL was as a device for supporting the documentation of copylefted software. However, the result is that it can be used for any kind of document.


The strength of the copyleft governing a work is an expression of the extent that the copyleft provisions can be efficiently imposed on all kinds of derived works. "Weak copyleft" refers to licenses where not all derived works inherit the copyleft license; whether a derived work inherits or not often depends on the manner in which it was derived.
"Weak copyleft" licenses are generally used for the creation of software libraries, to allow other software to link to the library, and then be redistributed without the legal requirement for the work to be distributed under the library's copyleft license. Only changes to the weak-copylefted software itself become subject to the copyleft provisions of such a license, not changes to the software that links to it. This allows programs of any license to be compiled and linked against copylefted libraries such as glibc (the GNU project's implementation of the C standard library), and then redistributed without any re-licensing required.
The most well-known free-software license that uses strong copyleft is the GNU General Public License. A stronger copyleft license is the AGPL which requires the publishing of the source code also for the usage case software as a service, ("see also" the term sometimes used, "service as a software substitute [SaaSS]") e.g. when software is deployed on servers. The Sybase Open Watcom Public License is among the strongest copyleft license, as this license closes the "private usage" loophole of the GPL, and requires the publishing of source code in any use case.Free-software licenses that use "weak" copyleft include the GNU Lesser General Public License and the Mozilla Public License. 
Examples of non-copyleft ("permissive") free-software licenses include the X11 license, Apache license and the BSD licenses.
The concrete effect of strong vs. weak copyleft has yet to be tested in court.The Design Science License is a strong copyleft license that can apply to any work—not only software or documentation, but also to literature, artworks, music, photography, and video. It was created by Michael Stutz after his interest in applying GNU-style copyleft to non-software works, which later came to be called Open content. In the 1990s the DSL was used on music recordings, visual art, and even novels. It is now hosted on the Free Software Foundation website's license list, but it is not considered compatible with the GPL by the Free Software Foundation.


"Full" and "partial" copyleft relate to another issue. Full copyleft exists when all parts of a work (except the license itself) may only be modified and distributed under the terms of the work's copyleft license. Partial copyleft, by contrast, exempts some parts of the work from the copyleft provisions, thus permitting distribution of some modifications under terms other than the copyleft license, or in some other way does not impose all the principles of copylefting on the work. For example, the GPL linking exception made for some software packages (see below).


Share-alike imposes the requirement that any freedom that is granted regarding the original work must be granted on exactly the same or compatible terms in any derived work: this implies that any copyleft license is automatically a share-alike license, but not the other way around, as some share-alike licenses include further restrictions, for instance prohibiting commercial use. Another restriction is that not everyone wants to share their work and some share-alike agreements require that the whole body of work be shared, even if the author only wants to share a certain part. The plus side for the author of the source code is that any modification to the code will not only benefit the company, but the author will be recognized and hold equal claim over the changed code. Some permutations of the Creative Commons licenses are examples of share-alike.



Viral license is a pejorative name for copyleft licenses. It originates from the terms 'General Public Virus' or 'GNU Public Virus' (GPV), which dates back to 1990, a year after the GPLv1 was released. The name "viral licenses" refers to the fact that any works derived from a copyleft work must preserve the copyleft permissions when distributed.
Some BSD License advocates used the term derisively in regards to the GPL's tendency to absorb BSD licensed code without allowing the original BSD work to benefit from it, while at the same time promoting itself as "freer" than other licenses. Microsoft vice-president Craig Mundie remarked, "This viral aspect of the GPL poses a threat to the intellectual property of any organization making use of it." In another context, Steve Ballmer declared that code released under GPL is useless to the commercial sector, since it can only be used if the resulting surrounding code is licensed under a GPL compatible license, and described it thus as "a cancer that attaches itself in an intellectual property sense to everything it touches".In response to Microsoft's attacks on the GPL, several prominent free-software developers and advocates released a joint statement supporting the license. According to FSF compliance engineer David Turner, it creates a misunderstanding and a fear of using copylefted free software. While a person can catch a virus without active action, license conditions take effect upon effective usage or adoption. David McGowan has written that there is no reason to believe the GPL could force proprietary software to become free software, but could "try to enjoin the firm from distributing commercially a program that combined with the GPL'd code to form a derivative work, and to recover damages for infringement." If the firm "actually copied code from a GPL'd program, such a suit would be a perfectly ordinary assertion of copyright, which most private firms would defend if the shoe were on the other foot."Popular copyleft licenses, such as the GPL, have a clause allowing components to interact with non-copyleft components as long as the communication is abstract, such as executing a command-line tool with a set of switches or interacting with a Web server. As a consequence, even if one module of an otherwise non-copyleft product is placed under the GPL, it may still be legal for other components to communicate with it normally. This allowed communication may or may not include reusing libraries or routines via dynamic linking – some commentators say it does, the FSF asserts it does not and explicitly adds an exception allowing it in the license for the GNU Classpath re-implementation of the Java library. This ambiguity is an important difference between the GPL and the LGPL, in that the LGPL specifically allows linking or compiling with the covered work.


The copyleft symbol is a backwards C in a circle (copyright symbol © mirrored). It has no legal significance. A 2016 proposal to add the symbol to a future version of Unicode was accepted by the Unicode Technical Committee. The code point U+1F12F 🄯 COPYLEFT SYMBOL was added in Unicode 11.As of 2018, it is currently largely unimplemented in fonts, but can be approximated with character U+2184 ↄ LATIN SMALL LETTER REVERSED C or the more widely available character U+0254 ɔ LATIN SMALL LETTER OPEN O between parenthesis "(ɔ)" or, if supported by the application, by combining it with the character U+20DD ↄ⃝ COMBINING ENCLOSING CIRCLE: "ↄ⃝".

